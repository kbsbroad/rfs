// Stylus RFS function
//
// Automated responsive values for font sizes, paddings, margins and much more
//
// Licensed under MIT (https://github.com/twbs/rfs/blob/master/LICENSE)

// Configuration

// Base value
$rfs-base-value ?= 1.25rem
$rfs-unit ?= rem

// Breakpoint at where values start decreasing if screen width is smaller
$rfs-breakpoint ?= 1200px

// Resize values based on screen height and width
$rfs-two-dimensional ?= false

// Factor of decrease
$rfs-factor ?= 10

// Generate enable or disable classes. Possibilities: false, "enable" or "disable"
$rfs-class ?= false

// 1 rem = $rfs-rem-value px
$rfs-rem-value ?= 16

// Disable RFS by setting $enable-rfs to false
$enable-rfs ?= true

// Remove px-unit from $rfs-base-value for calculations
if unit($rfs-base-value) == "px"
  $rfs-base-value = unit($rfs-base-value, "")
else if unit($rfs-base-value) == "rem"
  $rfs-base-value = unit($rfs-base-value * $rfs-rem-value, "")

if $rfs-breakpoint-unit == px
  $rfs-mq-value = unit($rfs-breakpoint, px)
else
  $rfs-mq-value = unit($rfs-breakpoint / $rfs-rem-value, $rfs-breakpoint-unit)

// Helper function to get the responsive value calculated by RFS
rfs-value($value)
  if $value == 0
    0
  else if type-of($value) != "unit"
    $value
  else if unit($value) != "px" and unit($value) != "rem"
    $value
  else
    if unit($value) == "rem"
      $value = unit($value * $rfs-rem-value, "")
    else
      $value = unit($value, "")

    // Only add the media query if the value is greater than the minimum value
    if abs($value) <= $rfs-base-value or !$enable-rfs
      if $rfs-unit == "rem"
        unit($value / $rfs-rem-value, rem)
      else
        unit($value, px)
    else
      // Calculate the minimum value
      $value-min = $rfs-base-value + (abs($value) - $rfs-base-value) / $rfs-factor;

      // Calculate difference between $value and the minimum value
      $value-diff = abs($value) - $value-min;

      $base-value = $value

      // Base value formatting
      if $rfs-unit == rem
        $min-width = unit($value-min / $rfs-rem-value, rem)
        $base-value = unit($base-value / $rfs-rem-value, rem)
      else
        $min-width = unit($value-min, px)
        $base-value = unit($base-value, px)

      // Use `vmin` if two-dimensional is enabled
      if $rfs-two-dimensional
        $variable-unit = vmin
      else
        $variable-unit = vw

      // Calculate the variable width between 0 and $rfs-breakpoint
      $variable-width = unit(round($value-diff * 100) / $rfs-breakpoint, $variable-unit)

      // Return the calculated value
      if $value != abs($value)
        "min(" + $base-value ", calc(-" + $min-width + " - " + $variable-width + "))"
      else
        "min(" + $base-value ", calc(" + $min-width + " + " + $variable-width + "))"

// RFS function
rfs($values)
  $val = ''

  // Loop over each value and calculate responsive & non-responsive values
  for $value in $values
    $val+= " " + rfs-value($value)

  // Remove first space
  unquote(slice($val, 1))
