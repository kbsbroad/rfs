// stylelint-disable function-whitespace-after
@import "../../less";

// font-size property with `px` unit
.selector-1 {
  background-color: #f00;
  width: 300px;
  font-size: .rfs(32px)[];
}

// font-size property with `rem` unit
.selector-2 {
  font-size: .rfs(2rem)[];
}

// font-size property with !important
.selector-3 {
  font-size: .rfs(2rem)[] !important;
}

// not supported unit
.selector-4 {
  font-size: .rfs(2em)[];
}

// special value
.selector-5 {
  font-size: .rfs(inherit)[];
}

// font-size property inside @support-query
@supports (display: flex) {
  .selector-6 {
    font-size: .rfs(28px)[];
  }
}

// flex property with unitless values
.selector-7 {
  flex: .rfs(0 999 32rem)[];
}

// padding property
.selector-8 {
  padding: .rfs(2rem)[];
}

// Multiple values
.selector-9 {
  margin: .rfs(2rem 3rem)[];
}

// Multiple values with important
.selector-10 {
  margin: .rfs(2rem 3rem)[] !important;
}

// Zero test
.selector-11 {
  font-size: .rfs(0)[];
}

// Zero combination test
.selector-12 {
  margin: .rfs(0 3rem)[];
}

// Value with comma
.selector-13 {
  box-shadow: .rfs(0 0 2rem #f00~"," 0 0 3rem #0f0)[];
}

// Custom properties
.selector-14 {
  --value: .rfs(3rem)[];
}

// Test small value
.selector-15 {
  font-size: .rfs(10px)[];
}

// Negative units
.selector-16 {
  margin: .rfs(-3rem)[];
}

// Small negative unit
.selector-17 {
  margin: .rfs(-.5rem)[];
}
